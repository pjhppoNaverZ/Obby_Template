fileFormatVersion: 2
guid: 15bc698cf8752fa4fa8541ae40762dc9
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\n// This class controls the moving
    platforms\r\nclass SimpleMove extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n   
    constructor() {\r\n        super(...arguments);\r\n        this.movingTime =
    1; // How much time its tooks to move and go back\r\n        // Set the amount
    of distance that will move towards each axis\r\n        this.movingRangeX = 2;
    // Amount of distance that the platform will move on X\r\n        this.movingRangeY
    = 2; // Amount of distance that the platform will move on Y\r\n        this.movingRangeZ
    = 2; // Amount of distance that the platform will move on Z\r\n        this._delta
    = 0; // Controls the time\r\n        this._movingFlag = true; // Flag for the
    move\r\n    }\r\n    // Every second the platform moves toward the offset position
    setted on the variables\r\n    // once the time is gapped them comes again to
    the start position\r\n    // https://docs.unity3d.com/ScriptReference/MonoBehaviour.FixedUpdate.html\r\n   
    FixedUpdate() {\r\n        // We count every second that is happen on the game
    and save it on \"_delta\"\r\n        this._delta += UnityEngine_1.Time.deltaTime;\r\n       
    // Check if the amount of \"_delta\" is more or equal to \"movingTime\"\r\n       
    if (this._delta >= this.movingTime) {\r\n            // Set \"_delta\" to zero\r\n           
    this._delta = 0;\r\n            // we set the variable _movingFlag to its value
    in reverse (if true then false - if false then true)\r\n            this._movingFlag
    = !this._movingFlag;\r\n        }\r\n        // Check if \"_movingFlag\" is true
    or false\r\n        if (this._movingFlag) {\r\n            // move the transform
    to its target position\r\n            this.transform.Translate(this.movingRangeX
    * UnityEngine_1.Time.deltaTime, this.movingRangeY * UnityEngine_1.Time.deltaTime,
    this.movingRangeZ * UnityEngine_1.Time.deltaTime);\r\n        }\r\n        else
    {\r\n            // move the transform to its initial position\r\n           
    this.transform.Translate(-this.movingRangeX * UnityEngine_1.Time.deltaTime, -1
    * this.movingRangeY * UnityEngine_1.Time.deltaTime, -this.movingRangeZ * UnityEngine_1.Time.deltaTime);\r\n       
    }\r\n    }\r\n}\r\nexports.default = SimpleMove;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2ltcGxlTW92ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNpbXBsZU1vdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBcUQ7QUFDckQsNkNBQW1DO0FBRW5DLDJDQUEyQztBQUMzQyxNQUFxQixVQUFXLFNBQVEscUNBQXFCO0lBQTdEOztRQUVXLGVBQVUsR0FBVyxDQUFDLENBQUMsQ0FBQyw4Q0FBOEM7UUFFN0UsOERBQThEO1FBRXZELGlCQUFZLEdBQVcsQ0FBQyxDQUFDLENBQUMsc0RBQXNEO1FBQ2hGLGlCQUFZLEdBQVcsQ0FBQyxDQUFDLENBQUMsc0RBQXNEO1FBQ2hGLGlCQUFZLEdBQVcsQ0FBQyxDQUFDLENBQUMsc0RBQXNEO1FBRS9FLFdBQU0sR0FBVyxDQUFDLENBQUMsQ0FBQyxvQkFBb0I7UUFDeEMsZ0JBQVcsR0FBWSxJQUFJLENBQUMsQ0FBQyxvQkFBb0I7SUFnQzdELENBQUM7SUE5QkcscUZBQXFGO0lBQ3JGLGlFQUFpRTtJQUNqRSwwRUFBMEU7SUFDMUUsV0FBVztRQUVQLDJFQUEyRTtRQUMzRSxJQUFJLENBQUMsTUFBTSxJQUFJLGtCQUFJLENBQUMsU0FBUyxDQUFDO1FBRTlCLG1FQUFtRTtRQUNuRSxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsRUFDbEM7WUFDSSx1QkFBdUI7WUFDdkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFFaEIsb0dBQW9HO1lBQ3BHLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ3hDO1FBRUQsMENBQTBDO1FBQzFDLElBQUksSUFBSSxDQUFDLFdBQVcsRUFDcEI7WUFDSSw0Q0FBNEM7WUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxrQkFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxHQUFHLGtCQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxZQUFZLEdBQUcsa0JBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUN4STthQUVEO1lBQ0ksNkNBQTZDO1lBQzdDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxrQkFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxHQUFHLGtCQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxrQkFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQy9JO0lBQ0wsQ0FBQztDQUNKO0FBM0NELDZCQTJDQyJ9","assetPath":"Assets/Scripts/Platforms/SimpleMove.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"movingTime","type":"System.Single","isArray":false,"initValue":["1"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"movingRangeX","type":"System.Single","isArray":false,"initValue":["2"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Direction\""]}]},{"assembly":"mscorlib","name":"movingRangeY","type":"System.Single","isArray":false,"initValue":["2"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"movingRangeZ","type":"System.Single","isArray":false,"initValue":["2"],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"SimpleMove","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 3e341dd986406f34386c6615daa2639a
  onlyWriteTrigger: 0
